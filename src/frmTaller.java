
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author lenin
 */
public class frmTaller extends javax.swing.JDialog {

    
    DefaultTableModel modelo;
    Conexion conect = new Conexion("ejeautos");
    Object datosCliente[] = new Object[5];
    Connection con = null;
    Statement st = null;
    Statement st2 = null;
     String cod2;
    public frmTaller(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setSize(946, 633);
        setLocationRelativeTo(null);
        LeerDatos();
        DatosMecanico();
        
        NomMecanico.setVisible(false);
        Auto.setVisible(false);
    }
    
     public void LeerDatos() {
        try {
            
            conect = new Conexion("ejeautos");
            String senten = "SELECT clientes.nombre, autos.marca, autos.matricula, autos.color, autos.anio FROM clientes INNER JOIN autos ON clientes.codcliente=autos.idduenio ORDER BY clientes.nombre";
            String encontrado = "NO";            
            con = conect.getConexion();
            st = con.createStatement();
            ResultSet rs = st.executeQuery(senten);
            modelo = (DefaultTableModel) tblDatos.getModel(); //tblDatos es el nombre del JTable

            while (rs.next()) {
                datosCliente[0] = (rs.getString("clientes.nombre"));
                datosCliente[1] = (rs.getString("autos.marca"));
                datosCliente[2] = (rs.getString("autos.matricula"));
                datosCliente[3] = (rs.getString("autos.color"));
                datosCliente[4] = (rs.getString("autos.anio"));
                modelo.addRow(datosCliente);
                encontrado = "SI";
            }

            if (encontrado.equals("NO")) {
                JOptionPane.showMessageDialog(null, "NO ENCONTRADO", "ATENCION!", JOptionPane.ERROR_MESSAGE);
            }
            tblDatos.setModel(modelo);
            con.close();
        } catch (HeadlessException | SQLException x) {
            System.out.println(x);
        }
    }
     
    public void DatosMecanico() {
        try {
            
            conect = new Conexion("ejeautos");
            String senten = "SELECT `nombre` FROM `mecanicos` WHERE estados LIKE 'activo'";
            String encontrado = "NO";            
            con = conect.getConexion();
            st = con.createStatement();
            ResultSet rs = st.executeQuery(senten);
            modelo = (DefaultTableModel) tblDatos.getModel(); //tblDatos es el nombre del JTable

            while (rs.next()) {
                cboMecanico.addItem(rs.getString("nombre"));
                encontrado = "SI";
            }

            if (encontrado.equals("NO")) {
                JOptionPane.showMessageDialog(null, "NO ENCONTRADO", "ATENCION!", JOptionPane.ERROR_MESSAGE);
            }
            tblDatos.setModel(modelo);
            con.close();
        } catch (HeadlessException | SQLException x) {
            System.out.println(x);
        }
    } 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        cboMecanico = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTaller = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtaDetalles = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        txtAsignar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Auto = new javax.swing.JTextField();
        NomMecanico = new javax.swing.JTextField();
        btnVisualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Propetario", "Marca del carro", "matricula", "AÃ±o", "Color"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDatosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDatos);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(20, 390, 560, 210);

        jButton1.setText("Asignar mecanico");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(260, 80, 150, 50);

        cboMecanico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMecanicoActionPerformed(evt);
            }
        });
        getContentPane().add(cboMecanico);
        cboMecanico.setBounds(110, 80, 140, 50);

        tblTaller.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Auto asignado", "Detalles del carro", "Mecanico asignado", "Estado del carro"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTaller);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(430, 40, 490, 180);

        txtaDetalles.setColumns(20);
        txtaDetalles.setRows(5);
        jScrollPane3.setViewportView(txtaDetalles);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(50, 260, 240, 96);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Nombre del mecancio");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(60, 50, 170, 40);

        txtAsignar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtAsignar.setText("Auto a asignar");
        getContentPane().add(txtAsignar);
        txtAsignar.setBounds(90, 160, 180, 50);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Ingrese los detalles del carro");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 230, 210, 40);

        Auto.setText("jTextField1");
        getContentPane().add(Auto);
        Auto.setBounds(400, 310, 140, 40);

        NomMecanico.setText("jTextField1");
        getContentPane().add(NomMecanico);
        NomMecanico.setBounds(400, 260, 140, 40);

        btnVisualizar.setText("Visualizar");
        btnVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnVisualizar);
        btnVisualizar.setBounds(640, 250, 140, 50);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDatosMouseClicked
        // TODO add your handling code here:
        if (tblDatos.getSelectedRow()>=0) {
            try {
                
                String marca=String.valueOf(modelo.getValueAt(tblDatos.getSelectedRow(), 1));
                txtAsignar.setText(marca);
                BuscarNombreAuto();
            }catch(Exception e){
          JOptionPane.showMessageDialog(this,"NO CONTIENE UN PRODUCTO "+e.getMessage());
          }
          
      
      }else{
      JOptionPane.showMessageDialog(this,"DEBE SELECCIONAR UN PRODUCTO","SISTEMA",JOptionPane.WARNING_MESSAGE);
      }
    }//GEN-LAST:event_tblDatosMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        asignarMecanico();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cboMecanicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMecanicoActionPerformed
        // TODO add your handling code here:
        BuscarNombreMecanico();
    }//GEN-LAST:event_cboMecanicoActionPerformed

    private void btnVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarActionPerformed
        // TODO add your handling code here:
        leerDatosTaller();
    }//GEN-LAST:event_btnVisualizarActionPerformed

    public void asignarMecanico(){
        try {

                conect = new Conexion("ejeautos");
                con = conect.getConexion();
                //COLOQUE EN LA SENTENCIA SQL EL NOMBRE DE SU BD Y LOS NOMBRE DE LOS CAMPOS
                String sql = "INSERT INTO taller (ID, codauto, descripcion, IDmecanico, estado) VALUES (?,?,?,?,?)";
                PreparedStatement ps = conect.getConexion().prepareStatement(sql);
                //COLOQUE LOS NOMBRES DE SUS CUADROS DE DIALOGO (JTEXTFIELD)
                   ps.setInt(1, 0);                
                   ps.setInt(2, Integer.parseInt(Auto.getText()));
                ps.setString(3, txtaDetalles.getText());
                ps.setInt(4, Integer.parseInt(NomMecanico.getText()));
                ps.setString(5, "En reparacion");           
                ps.execute();
                JOptionPane.showMessageDialog(null, "REGISTRO INGRESADO CORRECTAMENTE", "ATENCION!", 1);
                
                con.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "REGISTRO NO SE PUDO GUARDAR "+ e.getMessage(), "ATENCION!", 0);
            }
    }
    void leerDatosTaller(){
        try {
            
            conect = new Conexion("ejeautos");
            String senten = "SELECT autos.marca, taller.descripcion, mecanicos.nombre, taller.estado FROM ((taller INNER JOIN autos ON taller.codauto=autos.codauto) INNER JOIN mecanicos ON taller.IDmecanico=mecanicos.ID)"
                    + "Where taller.estado LIKE 'En reparacion'";
            String encontrado = "NO";            
            con = conect.getConexion();
            st = con.createStatement();
            ResultSet rs = st.executeQuery(senten);
            DefaultTableModel model = (DefaultTableModel) tblTaller.getModel(); //tblDatos es el nombre del JTable

            while (rs.next()) {
                Object[] datos=new Object[4];
                
                datos[0] = (rs.getString("autos.marca"));
                datos[1] = (rs.getString("taller.descripcion"));
                datos[2] = (rs.getString("mecanicos.nombre"));
                datos[3] = (rs.getString("taller.estado"));
                model.addRow(datos);
                encontrado = "SI";
            }

            if (encontrado.equals("NO")) {
                JOptionPane.showMessageDialog(null, "NO ENCONTRADO", "ATENCION!", JOptionPane.ERROR_MESSAGE);
            }
            tblDatos.setModel(modelo);
            con.close();
        } catch (HeadlessException | SQLException x) {
            System.out.println(x);
        }
    }
    private void BuscarNombreAuto() {        
            try {
                
                conect = new Conexion("ejeautos");
                String senten = "SELECT codauto FROM `autos` WHERE `marca` LIKE '"+txtAsignar.getText()+"'";
                String encontrado = "NO";            
                con = conect.getConexion();
                st = con.createStatement();
                ResultSet rs = st.executeQuery(senten);
                modelo = (DefaultTableModel) tblDatos.getModel(); //tblDatos es el nombre del JTable

                while (rs.next()) {
                    Auto.setText(rs.getString("codauto"));
                    encontrado = "SI";
                }
                if (encontrado.equals("NO")) {
                    JOptionPane.showMessageDialog(null, "NO ENCONTRADO", "ATENCION!", JOptionPane.ERROR_MESSAGE);
                }
                tblDatos.setModel(modelo);
                con.close();
            } catch (HeadlessException | SQLException x) {
                System.out.println(""+x.getMessage());
            }
           
    }
    private void BuscarNombreMecanico() {        
            try {
                
                conect = new Conexion("ejeautos");
                String senten = "SELECT ID FROM `mecanicos` WHERE `nombre` LIKE '"+cboMecanico.getSelectedItem().toString()+"'";
                String encontrado = "NO";            
                con = conect.getConexion();
                st = con.createStatement();
                ResultSet rs = st.executeQuery(senten);
                modelo = (DefaultTableModel) tblDatos.getModel(); //tblDatos es el nombre del JTable

                while (rs.next()) {
                    NomMecanico.setText(rs.getString("ID"));
                    encontrado = "SI";
                }
                if (encontrado.equals("NO")) {
                    JOptionPane.showMessageDialog(null, "NO ENCONTRADO", "ATENCION!", JOptionPane.ERROR_MESSAGE);
                }
                tblDatos.setModel(modelo);
                con.close();
            } catch (HeadlessException | SQLException x) {
                System.out.println(""+x.getMessage());
            }
           
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmTaller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmTaller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmTaller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmTaller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmTaller dialog = new frmTaller(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Auto;
    private javax.swing.JTextField NomMecanico;
    private javax.swing.JButton btnVisualizar;
    private javax.swing.JComboBox<String> cboMecanico;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblDatos;
    private javax.swing.JTable tblTaller;
    private javax.swing.JTextField txtAsignar;
    private javax.swing.JTextArea txtaDetalles;
    // End of variables declaration//GEN-END:variables
}
